{
  "id": "129",
  "title": "Calculate Unigram Probability from Corpus",
  "difficulty": "easy",
  "category": "NLP",
  "video": "",
  "likes": "0",
  "dislikes": "0",
  "contributor": [
    {
      "profile_link": "https://github.com/Noth2006",
      "name": "Noth2006"
    }
  ],
  "description": "Implement a function that calculates the unigram probability of a given word in a corpus of sentences. Include start `<s>` and end `</s>` tokens in the calculation. The probability should be rounded to 4 decimal places.",
  "learn_section": "# Unigram Probability Calculation\n\n- In Natural Language Processing (NLP), a  unigram model is the simplest form of a language model. \n- It assumes each word in a sentence is generated independently.  \n\n\n- The probability of a word w under the unigram model is:\n\n$P(w) = \\frac{\\text{Count}(w)}{\\sum_{w' \\in V} \\text{Count}(w')}$\n\nWhere:\n\n- $\\text{Count}(w)$ = Number of times the word w appears in the corpus.\n\n- $V$ = Vocabulary (all word tokens in the corpus).\n\n- $\\sum_{w' \\in V} \\text{Count}(w')$ = Total number of word tokens.\n- Round upto the 4th decimal point.\n\n\n---\n\n### Sample Corpus\n\n```text\n<s> I am Jack </s>\n<s> Jack I am </s>\n<s> Jack I like </s>\n<s> Jack I do like </s>\n<s> do I like Jack </s>\n```\n\nNotes : \n- \\<s> : Start of a sentence\n- \\</s> : End of a sentence\n- Need to count both the start and enod of sentence tokens while calculating probability.\n- Zero probability issues are not addressed here and will be covered separately under smoothing techniques in  later problems.",
  "starter_code": "def unigram_probability(corpus: str, word: str) -> float:\n    # Your code here\n    pass",
  "solution": "def unigram_probability(corpus: str, word: str) -> float:\n    tokens = corpus.split()\n    total_word_count = len(tokens)\n    word_count = tokens.count(word)\n    return round(word_count / total_word_count, 4)",
  "example": {
    "input": "corpus = \"<s> Jack I like </s> <s> Jack I do like </s>\", word = \"Jack\"",
    "output": "0.1818",
    "reasoning": "The corpus has 11 total tokens. 'Jack' appears twice. So, probability = 2 / 11"
  },
  "test_cases": [
    {
      "test": "corpus = \"\"\"<s> I am Jack </s> <s> Jack I am </s> <s> Jack I like </s> <s> Jack I do like </s> <s> do I like Jack </s>\"\"\"\nprint(round(unigram_probability(corpus, \"Jack\"),4))",
      "expected_output": "0.1852"
    },
    {
      "test": "corpus = \"\"\"<s> I am Jack </s> <s> Jack I am </s> <s> Jack I like </s> <s> Jack I do like </s> <s> do I like Jack </s>\"\"\"\nprint(round(unigram_probability(corpus, \"like\"),4))",
      "expected_output": "0.1111"
    },
    {
      "test": "corpus = \"\"\"<s> hello world </s> <s> hello </s>\"\"\"\nprint(round(unigram_probability(corpus, \"hello\"),4))",
      "expected_output": "0.2857"
    },
    {
      "test": "corpus = \"\"\"<s> the quick brown fox </s> <s> jumps over the lazy dog </s>\"\"\"\nprint(round(unigram_probability(corpus, \"the\"),4))",
      "expected_output": "0.1538"
    }
  ]
}